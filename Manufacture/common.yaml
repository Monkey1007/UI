Manufacture:                          # 项目名称
  home:                               # 模块名称
    - about_us:                       # 模块下的py名称
      url:                            # 测试类下的url，为空请求，config.yaml的URL
      className: TestHome          # 类名
      funName:
      - test_about_us: {              # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 后超,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证aboutUs是否能正常打开;\n
                1、打开首页;\n
                2、点击AboutUs;\n
                3、断言跳转的url是否包含{/nav/2.html}", # 用例描述场景，或者是测试步骤，按照此格式书写，其中{}传入用例的参数
        asserts: True                 # 预期结果
      }
        test_product_center: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证ProductsCenter是否能正常打开;\n
                1、打开首页;\n
                2、点击ProductsCenter;\n
                3、断言跳转的url是否包含{/nav/11.html}",
        asserts: True
        }
        test_technological_strength: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证TechnologicalStrength是否能正常打开;\n
                1、打开首页;\n
                2、点击TechnologicalStrength;\n
                3、断言跳转的url是否包含{/nav/12.html}",
        asserts: True
        }
        test_contact_us: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证ContactUs是否能正常打开;\n
                1、打开首页;\n
                2、点击ContactUs;\n
                3、断言跳转的url是否包含{/nav/24.html}",
        asserts: True
        }
    - new_center:
      url:
      className: TestNewCenter
      funName:
      - test_good_news_table_one: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证GoodNews是否能正常打开并跳转;\n
                1、打开首页;\n
                2、点击GoodNews;\n
                3、断言跳转的url是否包含{/news/71.html}",
        asserts: True
      }
        test_good_news_table_two: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证GoodNewsTwo是否能正常打开并跳转;\n
                1、打开首页;\n
                2、点击GoodNewsTwo;\n
                3、断言跳转的url是否包含{/news/48.html}",
        asserts: True
        }
        test_launching: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证launching是否能正常打开并跳转;\n
                1、打开首页;\n
                2、点击launching;\n
                3、断言跳转的url是否包含{/news/47.html}",
        asserts: True
        }
  marketing:
    - marketing:
      url:                            # 测试类下的url，为空请求，config.yaml的URL
      className: TestMarketing          # 类名
      funName:
      - test_market: {              # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing是否能正常打开;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、断言跳转的url是否包含{/nav/13.html}", # 用例描述场景，或者是测试步骤，按照此格式书写，其中{}传入用例的参数
        asserts: True                 # 预期结果
      }
        test_market_concept: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页中concept页签是否能正常打开;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击Concept;\n
                4、断言跳转的url是否包含{/intro/10.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_network: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页中concept页签是否能正常打开;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击Network;\n
                4、断言跳转的url是否包含{/intro/11.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_marketing_knowledge: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页中concept页签是否能正常打开;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击Marketing knowledge;\n
                4、断言跳转的url是否包含{/intro/12.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_home: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转表头home页;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击home;\n
                4、断言跳转的url是否等于{http://1903265005.pool4-site.make.yun300.cn/}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_about: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转表头about页;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击about;\n
                4、断言跳转的url是否包含{/nav/2.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_news: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转表头news页;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击news;\n
                4、断言跳转的url是否包含{/nav/10.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_product: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转表头product页;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击product;\n
                4、断言跳转的url是否包含{/nav/11.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_technology: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转表头technology页;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击technology;\n
                4、断言跳转的url是否包含{/nav/12.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contact: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转表头contact页;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击contact;\n
                4、断言跳转的url是否包含{/nav/24.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
  marketing_contact:                # 模块名称
    - marketing_contact_about:     # 模块下的py名称
      url: /nav/13.html                            # 测试类下的url，为空请求，config.yaml的URL
      className: TestMarketingContactAbout          # 类名
      funName:
      - test_market_contact_about: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末about页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末about;\n
                4、断言跳转的url是否包含{/nav/51.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_about_profile: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末profile页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末profile;\n
                4、断言跳转的url是否包含{/nav/52.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_about_speech: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末speech页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末speech;\n
                4、断言跳转的url是否包含{/nav/53.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contact_about_organization: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末organization页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末organization;\n
                4、断言跳转的url是否包含{/nav/54.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_about_system: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末system页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末system;\n
                4、断言跳转的url是否包含{/nav/55.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contact_about_philosophy: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末philosophy页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末philosophy;\n
                4、断言跳转的url是否包含{/nav/56.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_about_honor: {     # 测试方法
        url: ,                        # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末honor页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末honor;\n
                4、断言跳转的url是否包含{/nav/57.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contact_about_stafStyle: {     # 测试方法
        url: ,                       # 用例下的url，为空请求，类下URL
        author: 王海宾,                  # 用例作者
        level: 高,                     # 用例级别
        scene: "验证marketing页跳转页末stafStyle页是否正常;\n
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末stafStyle;\n
                4、断言跳转的url是否包含{/nav/70.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
    - marketing_contact_news:
      url: /nav/13.html
      className: TestMarketingContactNews
      funName:
      - test_market_contact_news: {     # 测试方法
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末news页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末news;\n
                4、断言跳转的url是否包含{/nav/58.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_companyNews: {     # 测试方法
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末companyNews页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末companyNews;\n
                4、断言跳转的url是否包含{/nav/59.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_industryDynamics: {     # 测试方法
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末industryDynamics页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末industryDynamics;\n
                4、断言跳转的url是否包含{/nav/60.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_notice: {     # 测试方法
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末notice页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末notice;\n
                4、断言跳转的url是否包含{/nav/61.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contact_knowledge: {     # 测试方法
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末knowledge页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末knowledge;\n
                4、断言跳转的url是否包含{/nav/62.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contact_publicWelfare: {     # 测试方法
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末publicWelfare页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末publicWelfare;\n
                4、断言跳转的url是否包含{/nav/63.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
    - marketing_contact_products:
      url: /nav/13.html
      className: TestMarketingContactProducts
      funName:
      - test_market_contact_products: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末Products页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末Products;\n
                4、断言跳转的url是否包含{/nav/72.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_automoticeFilterSeries: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末automoticeFilterSeries页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末automoticeFilterSeries;\n
                4、断言跳转的url是否包含{/nav/74.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_automotiveBrake: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末automotiveBrake页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末automotiveBrake;\n
                4、断言跳转的url是否包含{/nav/75.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_compressor: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末compressor页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末compressor;\n
                4、断言跳转的url是否包含{/nav/76.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_sealSeriesOilSeal: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末sealSeriesOilSeal页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末sealSeriesOilSeal;\n
                4、断言跳转的url是否包含{/nav/77.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_motorDrainValue: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末motorDrainValue页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末motorDrainValue;\n
                4、断言跳转的url是否包含{/nav/78.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_shockAbsorber: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末shockAbsorber页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末shockAbsorber;\n
                4、断言跳转的url是否包含{/nav/79.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_rubberMiscellaneousItems: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末rubberMiscellaneousItems页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末rubberMiscellaneousItems;\n
                4、断言跳转的url是否包含{/nav/80.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
        test_market_contect_generalRubberParts: {
        url: ,                             # 用例下的url，为空请求，类下URL
        author: 王海宾,                    # 用例作者
        level: 高,                         # 用例级别
        scene: "验证marketing页跳转页末generalRubberParts页
                1、打开首页;\n
                2、点击marketing;\n
                3、点击页末generalRubberParts;\n
                4、断言跳转的url是否包含{/nav/81.html}",    #用例描述场景、测试步骤，其中{}传入用例的参数
        asserts: True
      }
  about:
    - about_table:
      url: /nav/2.html
      className: TestAboutUs
      funName:
      - test_profile: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Profile是否能正常打开并跳转;\n
                  1、打开About;\n
                  2、点击Profile;\n
                  3、断言跳转的url是否包含{/intro/1.html}",
        asserts: True
      }
        test_speech: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Speech是否能正常打开并跳转;\n
                  1、打开About;\n
                  2、点击Speech;\n
                  3、断言跳转的url是否包含{/intro/3.html}",
        asserts: True
        }
        test_organization: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Organization是否能正常打开并跳转;\n
                  1、打开About;\n
                  2、点击Organization;\n
                  3、断言跳转的url是否包含{/intro/4.html}",
        asserts: True
        }
        test_philosophy: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Philosophy是否能正常打开并跳转;\n
                  1、打开About;\n
                  2、点击Philosophy;\n
                  3、断言跳转的url是否包含{/intro/6.html}",
        asserts: True
        }
        test_honor: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Honor是否能正常打开并跳转;\n
                  1、打开About;\n
                  2、点击Honor;\n
                  3、断言跳转的url是否包含{/honor.html?atlasCateId=1}",
        asserts: True
        }
        test_honor_next_page: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Honor点击下一页是否能正常跳转;\n
                  1、打开About;\n
                  2、点击Honor;\n
                  3、点击下一页;\n
                  4、断言下一页跳转的url是否包含{/honor.html?atlasCateId=1#c_atlas_list-15487240148372429}",
        asserts: True
        }
        test_honor_img: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Honor点击图片是否能正常跳转;\n
                  1、打开About;\n
                  2、点击Honor;\n
                  3、点击第{1}张图片;\n
                  4、断言下一页跳转的url是否包含{/atlas/2.html}",
        asserts: True
        }
        test_staff_style_next_page: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证StaffStyle点击下一页是否能正常跳转;\n
                  1、打开About;\n
                  2、点击StaffStyle;\n
                  3、点击下一页;\n
                  4、断言下一页跳转的url是否包含{/honor.html?atlasCateId=2#c_atlas_list-15487240148372429}",
        asserts: True
        }
        test_staff_style_img: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证StaffStyle点击图片是否能正常跳转;\n
                  1、打开About;\n
                  2、点击StaffStyle;\n
                  3、点击第{1}张图片;\n
                  4、断言下一页跳转的url是否包含{/atlas/26.html}",
        asserts: True
        }
        test_staff_style: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证StaffStyle是否能正常打开并跳转;\n
                1、打开About;\n
                2、点击StaffStyle;\n
                3、断言跳转的url是否包含{/honor.html?atlasCateId=2}",
        asserts: True
        }
  news:
    - news_table:
      url: /nav/10.html
      className: TestNewsTable
      funName:
      - test_company_news: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证CompanyNews是否能正常跳转;\n
                1、打开News;\n
                2、点击CompanyNews;\n
                3、断言跳转的url是否包含{/news/2/}",
        asserts: True
      }
        test_industry_dynamics: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证IndustryDynamics是否能正常跳转;\n
                1、打开News;\n
                2、点击IndustryDynamics;\n
                3、断言跳转的url是否包含{/news/3/}",
        asserts: True
        }
        test_notice: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Notice是否能正常跳转;\n
                1、打开News;\n
                2、点击Notice;\n
                3、断言跳转的url是否包含{/news/4/}",
        asserts: True
        }
        test_knowledge: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Knowledge是否能正常跳转;\n
                1、打开News;\n
                2、点击Knowledge;\n
                3、断言跳转的url是否包含{/news/5/}",
        asserts: True
        }
        test_public_welfare: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证PublicWelfare是否能正常跳转;\n
                1、打开News;\n
                2、点击PublicWelfare;\n
                3、断言跳转的url是否包含{/news/6/}",
        asserts: True
        }
        test_news_center: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证NewsCenter是否能正常跳转;\n
                1、打开News;\n
                2、点击NewsCenter中的第{1}条数据;\n
                3、断言跳转的url是否包含{/news/}",
        asserts: True
        }
        test_news_center_next_page: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证NewsCenter点击下一页是否正常跳转;\n
                1、打开News;\n
                2、点击NewsCenter;\n
                3、点击下一页;\n
                4、断言跳转的url是否包含{/nav/10.html#c_news_list-15487307331178472}",
        asserts: True
        }
    - company_news:
      url: /news/2/
      className: TestCompanyNewsTable
      funName:
      - test_download: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Download是否正常跳转;\n
                1、打开CompanyNews;\n
                2、点击Download;\n
                3、断言跳转的url是否包含{/news/8/}",
        asserts: True
      }
        test_equipment: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Equipment是否正常跳转;\n
                1、打开CompanyNews;\n
                2、点击Equipment;\n
                3、断言跳转的url是否包含{/news/9/}",
        asserts: True
        }
        test_technology: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Technology是否正常跳转;\n
                1、打开CompanyNews;\n
                2、点击Technology;\n
                3、断言跳转的url是否包含{/news/10/}",
        asserts: True
        }
        test_company_news_info: {
        url: ,
        author: 后超,
        level: 低,
        scene: "验证CompanyNews图片新闻是否能进入详情并跳转;\n
                1、打开CompanyNews;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/48.html}",
        asserts: True
        }
        test_download_info: {
        url: /news/8/,
        author: 后超,
        level: 低,
        scene: "验证Download图片新闻是否能进入详情并跳转;\n
                1、打开Download;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/24.html}",
        asserts: True
        }
        test_equipment_info: {
        url: /news/9/,
        author: 后超,
        level: 低,
        scene: "验证Equipment图片新闻是否能进入详情并跳转;\n
                1、打开Equipment;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/62.html}",
        asserts: True
        }
        test_technology_info: {
        url: /news/10/,
        author: 后超,
        level: 低,
        scene: "验证Technology图片新闻是否能进入详情并跳转;\n
                1、打开Technology;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/70.html}",
        asserts: True
        }
        test_industry_dynamics_info: {
        url: /news/10/,
        author: 后超,
        level: 低,
        scene: "验证IndustryDynamics图片新闻是否能进入详情并跳转;\n
                1、打开IndustryDynamics;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/70.html}",
        asserts: True
        }
        test_notice_info: {
        url: /news/4/,
        author: 后超,
        level: 低,
        scene: "验证Notice图片新闻是否能进入详情并跳转;\n
                1、打开Notice;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/14.html}",
        asserts: True
        }
        test_knowledge_info: {
        url: /news/4/,
        author: 后超,
        level: 低,
        scene: "验证Knowledge图片新闻是否能进入详情并跳转;\n
                1、打开Knowledge;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/14.html}",
        asserts: True
        }
        test_public_welfare: {
        url: /news/6/,
        author: 后超,
        level: 低,
        scene: "验证PublicWelfare图片新闻是否能进入详情并跳转;\n
                1、打开PublicWelfare;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/71.html}",
        asserts: True
        }
  technology:
    - technology_table:
      url: /nav/12.html
      className: TestTechnologyTable
      funName:
      - test_switch_download: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Download是否能正常跳转;\n
                1、打开Technology;\n
                2、点击Download;\n
                3、断言跳转的url是否包含{/news/8/}",
        asserts: True
      }
        test_switch_equipment: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Equipment是否能正常跳转;\n
                1、打开Technology;\n
                2、点击Equipment;\n
                3、断言跳转的url是否包含{/news/9/}",
        asserts: True
        }
        test_switch_technology: {
        url: ,
        author: 后超,
        level: 高,
        scene: "验证Technology是否能正常跳转;\n
                1、打开Technology;\n
                2、点击Technology;\n
                3、断言跳转的url是否包含{/news/10/}",
        asserts: True
        }
        test_technology_info: {
        url: /news/10/,
        author: 后超,
        level: 低,
        scene: "验证Technology图片新闻是否能进入详情并跳转;\n
                1、打开Technology;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/70.html}",
        asserts: True
        }
        test_equipment_info: {
        url: /news/9/,
        author: 后超,
        level: 低,
        scene: "验证Equipment图片新闻是否能进入详情并跳转;\n
                1、打开Equipment;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/62.html}",
        asserts: True
        }
        test_download_info: {
        url: /news/8/,
        author: 后超,
        level: 低,
        scene: "验证Download图片新闻是否能进入详情并跳转;\n
                1、打开Download;\n
                2、点击第{1}张新闻图片;\n
                3、断言跳转的url是否包含{/news/24.html}",
        asserts: True
        }
  products:
    - products_center:
      url: /nav/11.html
      className: TestProductsCenterTable
      funName:
      - test_automotive_filter_series: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证AutomotiveFilterSeries是否能正常跳转;\n
                1、打开Products;\n
                2、点击AutomotiveFilterSeries;\n
                3、断言跳转的url是否包含{/product/5/}",
        asserts: True
      }
        test_automotive_brake: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证AutomotiveBrake是否能正常跳转;\n
                1、打开Products;\n
                2、点击AutomotiveBrake;\n
                3、断言跳转的url是否包含{/product/7/}",
        asserts: True
        }
        test_compressor: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证Compressor是否能正常跳转;\n
                1、打开Products;\n
                2、点击Compressor;\n
                3、断言跳转的url是否包含{/product/8/}",
        asserts: True
        }
        test_seal_series_or_oil_seal: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证SealSeriesOilSeal是否能正常跳转;\n
                1、打开Products;\n
                2、点击SealSeriesOilSeal;\n
                3、断言跳转的url是否包含{/product/9/}",
        asserts: True
        }
        test_motor_drain_valve: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证MotorDrainValve是否能正常跳转;\n
                1、打开Products;\n
                2、点击MotorDrainValve;\n
                3、断言跳转的url是否包含{/product/10/}",
        asserts: True
        }
        test_shock_absorber: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证ShockAbsorber是否能正常跳转;\n
                1、打开Products;\n
                2、点击ShockAbsorber;\n
                3、断言跳转的url是否包含{/product/11/}",
        asserts: True
        }
        test_rubber_miscellaneous_items: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证RubberMiscellaneousItems是否能正常跳转;\n
                1、打开Products;\n
                2、点击RubberMiscellaneousItems;\n
                3、断言跳转的url是否包含{/product/12/}",
        asserts: True
        }
        test_general_rubber_parts: {
        url: ,
        author: 后超,
        level: 中,
        scene: "验证GeneralRubberParts是否能正常跳转;\n
                1、打开Products;\n
                2、点击GeneralRubberParts;\n
                3、断言跳转的url是否包含{/product/13/}",
        asserts: True
        }

    - module_in_info:
      url:
      className: InModuleInfo
      funName:
      - test_automotive_filter_series_info: {
        url: /product/5/,
        author: 后超,
        level: 中,
        scene: "验证AutomotiveFilterSeries图片详情是否能正常跳转;\n
                1、打开AutomotiveFilterSeries;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/162.html}",
        asserts: True
      }
        test_automotive_brake_info: {
        url: /product/7/,
        author: 后超,
        level: 中,
        scene: "验证automotive_brake图片详情是否能正常跳转;\n
                1、打开automotive_brake;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/152.html}",
        asserts: True
        }
        test_compressor_info: {
        url: /product/8/,
        author: 后超,
        level: 中,
        scene: "验证Compressor图片详情是否能正常跳转;\n
                1、打开Compressor;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/145.html}",
        asserts: True
        }
        test_seal_series_or_oil_seal_info: {
        url: /product/9/,
        author: 后超,
        level: 中,
        scene: "验证seal_series_or_oil_seal图片详情是否能正常跳转;\n
                1、打开seal_series_or_oil_seal;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/139.html}",
        asserts: True
        }
        test_motor_drain_valve_info: {
        url: /product/10/,
        author: 后超,
        level: 中,
        scene: "验证motor_drain_valve图片详情是否能正常跳转;\n
                1、打开motor_drain_valve;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/138.html}",
        asserts: True
        }
        test_shock_absorber_info: {
        url: /product/11/,
        author: 后超,
        level: 中,
        scene: "验证shock_absorber图片详情是否能正常跳转;\n
                1、打开shock_absorber;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/137.html}",
        asserts: True
        }
        test_rubber_miscellaneous_items_info: {
        url: /product/12/,
        author: 后超,
        level: 中,
        scene: "验证rubber_miscellaneous_items图片详情是否能正常跳转;\n
                1、打开rubber_miscellaneous_items;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/135.html}",
        asserts: True
        }
        test_general_rubber_parts_info: {
        url: /product/13/,
        author: 后超,
        level: 中,
        scene: "验证general_rubber_parts图片详情是否能正常跳转;\n
                1、打开general_rubber_parts;\n
                2、点击第{1}张图片;\n
                3、断言跳转的url是否包含{/product/126.html}",
        asserts: True
        }
  contact:
   - contact:
     url:
     className: TestContact
     funName:
      - test_contact: {
        url: ,
        author: 马强,
        level: 中,
        scene: "验证首页顶部CONTACT是否能正常跳转;\n
                      1、打开home;\n
                      2、点击顶部导航栏Contact;\n
                      3、断言跳转的url是否包含{/nav/24.html}",
        asserts: True
      }
        test_ContactUs: {
        url: /nav/24.html ,
        author: 马强,
        level: 中,
        scene: "验证首页顶部CONTACT US是否能正常跳转;\n
                1、打开Contact;\n
                2、点击导航栏Contact us;\n
                3、断言跳转的url是否包含{/intro/13.html}",
        asserts: True
        }
        test_Message: {
          url: /nav/24.html ,
          author: 马强,
          level: 中,
          scene: "验证首页顶部CONTACT US是否能正常跳转;\n
                1、打开Contact;\n
                2、点击导航栏Message;\n
                3、断言跳转的url是否包含{/messages.html}",
          asserts: True
        }
