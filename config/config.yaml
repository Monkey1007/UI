base_url:
  Manufacture: http://1903265005.pool4-site.make.yun300.cn  # 测试地址
excel_parameter:
  project_name: Manufacture          # 项目名称
  test_version: V0.0.0    # 测试时的版本号
  science: 线上环境   # 测试环境
config:
  token_keys: Authorization   # token表示key名
  level: 10                   # 日志等级
  account: '15928564313'         # 正确的账号
  password: 'Li123456'    # 正确的密码
  company: 草草后
  page_loading_wait: 20   # 超时时间
  logs_save: 7          # 日志最长保存天数
  re: '*_st.py'         # 正则匹配执行的py,如果想只执行一个py的数据，那么改一下此处的后缀名即可！
  task_time: 1         # 定时任务等待执行时间
  browser: False         # 浏览器隐藏执行开关,隐藏: True，不隐藏: False
  logo_url: /repository/image/6Nj1TrvnQT-X3V2FLiW3FQ.jpg  # 项目logo连接
  while_case: 0         # 失败重跑次数
  while_sleep: 3        # 失败重跑等待时间
  module_run: # contact     # 指定需要运行的模块，示例：login
  token_invalid: 6      # 接口token登录几个小时后失效，并重新登录获取新的token
  skip_module: {contact_st: 'L', marketing_contact_about_st: 'F',
                about_table_st: 'K', contact_st: 'KJ',
                about_us_st: 'B', new_center_st: 'JH',
                company_news_st: 'D', news_table_st: 'I', products_center_st: 'Y',
                module_in_info_st: 'DS', technology_table_st: 'H',
                marketing_st: 'G',
                marketing_contact_about_st: 'PK',
                marketing_contact_products_st: 'HJ',
                marketing_contact_news_st: 'OP'} # 跳过模块>示例:{ValidateLogin_st: 这是原因, customer_st: 这是原因}
send_email:
  server: smtp.gouuse.cn                # 邮件发送的服务器
  port:                                   # 发送邮件端口
  send_account: houchao@gouuse.cn #wanghaibin@300.cn       # 发送账号
  send_password: Aa123456 #Ccwoaini521$                 # 发送密码
  receiver: [houchao@gouuse.cn, 784348736@qq.com, 1063116271@qq.com] # 接收的邮件地址
sql:
  account: 'root'                       # 数据库账号
  password: '123456'                    # 数据库密码
  port: 3307                            # 数据库端口
  name_db: 'case_db'                    # 数据库
  address: localhost                    # 数据库地址，此处为本地数据库地址
  sql_table: DROP TABLE IF EXISTS result                    # 表是否存在
  sql_create_title:  CREATE TABLE result (
                     case_id varchar(225),
                     case_level varchar(500),
                     case_module varchar(500),
                     case_name  varchar(500),
                     case_url varchar(500),
                     case_remark  varchar(500),
                     case_status varchar(500),
                     results_value varchar(500),
                     case_error_reason varchar(10000),
                     case_wait_time varchar(500),
                     case_img varchar(500),
                     case_author varchar(500),
                     insert_time timestamp)              # 插入表头
  sql_query: SELECT * FROM result                           # 查询result里面的所有数据
  sql_insert: INSERT INTO result(case_id,
                                 case_level,
                                 case_module,
                                 case_name,
                                 case_url,
                                 case_remark,
                                 case_status,
                                 results_value,
                                 case_error_reason,
                                 case_wait_time,
                                 case_img,
                                 case_author,
                                 insert_time) VALUES('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s') # 插入数据
  sql_delete: DELETE FROM result WHERE 1=1                 # 数据库全部清除数据
  sql_update: UPDATE result SET %s WHERE %s                # 更新数据
  sql_create_list: create database %s character set utf8  # 创建数据库

