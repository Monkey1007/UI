base_url:
#  KQ: https://ukuaiqi.com     # 正式环境
#  KQ: http://staging.ukuaiqi.com     # staging 14000000000 123456
#  EDP: https://admin.edpglobal.cn  # 正式环境
#  EDP: https://testadmin.edpglobal.cn:8443  # 测试环境
#  EDP: https://devadmin.edpglobal.cn:8443  # 开发环境
  SCRM: https://www.scrm365.cn  # 测试环境
#  EDP_Interface: https://devadmin.edpglobal.cn:8443  # 开发环境(接口)
#  EDP: https://admin.edpglobal.cn  # 正式环境
#  SCRM: https://www.scrm365.cn  # 正式环境 15928564313 Li123456
excel_parameter:
  project_name: SCRM
  science: 测试环境
config:
  token_keys: Authorization
  level: 10
  account: '15928564313'         # 正确的账号
  password: 'Li123456'    # 正确的密码
  implicitly_wait: 10   # 隐时等待时间
  logs_save: 7          # 日志最长保存天数
  re: '*_st.py'         # 正则匹配执行的py
  task_time: 10         # 定时任务等待执行时间
  browser: False         # 浏览器隐藏执行开关,隐藏: True，不隐藏: False
  logo_url: /static/images/logo.bae1317.png  # 项目logo连接
  while_case: 0         # 失败重跑次数
  while_sleep: 3        # 失败重跑等待时间
  module_run:       # 指定需要运行的模块
  token_invalid: 6      # 接口token登录几个小时后失效，并重新登录获取新的token
  skip_module: {} # 跳过模块
send_email:
  server: smtp.gouuse.cn
  port:
  send_account: houchao@gouuse.cn
  send_password: Aa123456
  receiver: [784348736@qq.com, 1063116271@qq.com]
sql:
  account: 'root'
  password: '123456'
  port: 3307
  name_db: 'case_db'
  address: localhost
  sql_table: DROP TABLE IF EXISTS result                    # 表是否存在
  sql_create_title:  CREATE TABLE result (
                     case_id smallint(225),
                     case_level varchar(500),
                     case_name  varchar(500),
                     case_url varchar(500),
                     case_remark  varchar(500),
                     case_wait_time varchar(500),
                     case_status varchar(500),
                     case_error_reason varchar(500),
                     case_img varchar(500),
                     case_author varchar(500),
                     insert_time timestamp,
                     case_other varchar(500))              # 插入表头
  sql_query: SELECT * FROM result                           # 查询result里面的所有数据
  sql_insert: INSERT INTO result(case_id,
                                 case_level,
                                 case_name,
                                 case_remark,
                                 case_img,
                                 case_status,
                                 case_url,
                                 case_error_reason,
                                 case_wait_time,
                                 case_author,
                                 insert_time,
                                 case_other) VALUES('%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s','%s') # 插入数据
  sql_delete: DELETE FROM result WHERE 1=1                 # 数据库全部清除数据
  sql_update: UPDATE result SET %s WHERE %s                # 更新数据

